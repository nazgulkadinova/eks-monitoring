# # values.yaml for Grafana 
# configMap:
#   name: grafana-staging
#   namespace: monitoring
#   url: http://prometheus-service.monitoring:9090

# deployment:
#   name: grafana
#   app: grafana
#   namespace: monitoring
#   replicaCount: 1
#   serviceAccountName: reviews-grafana-serv-sa
#   container:
#     image: grafana/grafana:10.3.1
#     name: grafana
#     containerPort: 3000
#     env:
#       - name: GF_SECURITY_ADMIN_USER
#       - name: GF_SECURITY_ADMIN_PASSWORD
#   volumeMounts:
#     - name: grafana-volume
#       mountPath: /var/lib/grafana
#     - name: secret-store
#       mountPath: /mnt/secrets
#   volumes:
#   - name: my-data-volume
#     persistentVolumeClaim:
#       claimName: my-data-pvc            

# service:
#   name: grafana
#   namespace: monitoring
#   port: 3000
#   targetPort: 3000
#   selector:
#     app: grafana
#   type: LoadBalancer


# ingress:
#   name: grafana-dev-ingress
#   namespace: monitoring
#   enabled: true
#   className: nginx
#   annotations:
#     nginx.ingress.kubernetes.io/whitelist-source-range: "73.211.20.186/32"
#   host: "grafana.nazgul.click"
#   path: "/"
#   pathType: Prefix
#   serviceName: grafana
#   servicePort: 3000



# resources:
#   cpu: "2000m"
#   memory: "3Gi"
# requests:
#   cpu: "1000m"
#   memory: "2Gi"

# persistence:
#   name: grafana-pvc
#   namespace: monitoring
#   enabled: true
#   accessModes: ReadWriteOnce
#   storage: 2Gi
  
# # create K8s secret from AWS Secrets Manager secret using SecretProviderClass
# awsSecrets:
#   enabled: true
#   secretProviderClassName: "grafana-aws-secrets"
#   k8sSecretName: "grafana-credentials"
#   awsSecretName: "dev/grafana/grafana-credentials"
#   secretKeys:
#     - key: "admin-user"
#     - key: "admin-password"

namespace : monitoring
image : grafana/grafana:latest
containerPort : 3000
nodePort : 32000
type : LoadBalancer
url : http://prometheus-service.monitoring.svc:8080
host : grafana.nazgul.click